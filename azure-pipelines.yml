variables:
- group: docker-hub-credentials

jobs:
- job: library
  displayName: Build Library 🦄
  pool:
    vmImage: 'macOS-10.13'

  strategy:
    maxParallel: 10
    matrix:
      node-10:
        node_version: ^10.6.0

  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(node_version)
    displayName: 'Install Node.js 🐍'

  - script:  yarn
    displayName: 'Install dependencies 📦'

  - script: yarn bootstrap
    displayName: 'Lerna bootstrap 🥾'

  - script: yarn lint
    displayName: 'Run linting'

  - script: yarn build
    displayName: 'Build applications'

  - script: yarn test
    displayName: 'Run testing'

- job: Docker
  displayName: Docker 🐳
  pool:
    vmImage: 'ubuntu-16.04'
  steps:

    - script: |
        docker build -t sketchmine/components-library . -f ./config/Dockerfile
        docker build -t sketchmine/code-analyzer . -f ./packages/code-analyzer/Dockerfile
        docker build -t sketchmine/app-builder . -f ./packages/app-builder/Dockerfile
        docker build -t sketchmine/sketch-builder . -f ./packages/sketch-builder/Dockerfile
        docker build -t sketchmine/sketch-validator . -f ./packages/sketch-validator-nodejs-wrapper/Dockerfile
      displayName: 'Build 🐳 🏙'

    - script: |
        docker login -u $(docker-hub-user) -p $(docker-hub-password)
        docker push sketchmine/code-analyzer
        docker push sketchmine/app-builder
        docker push sketchmine/sketch-builder
        docker push sketchmine/sketch-validator
      displayName: 'Publish 👩🏼‍🏫 Docker images 🐳 🚀'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
